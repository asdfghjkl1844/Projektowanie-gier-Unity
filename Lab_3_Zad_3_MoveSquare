using UnityEngine;

public class MoveSquare : MonoBehaviour
{
    public float sideLength = 10f;     
    public float speed = 2f;           
    private Vector3 startPosition;
    private Vector3 forward0;              
    private Vector3 right0;            
    private Vector3[] corners;        
    private int currentCorner = 1;     

    void Start()
    {
        startPosition = transform.position;
       
        Vector3 forward = transform.forward;
        forward.y = 0f;
        forward0 = forward.sqrMagnitude > 0.0001f ? forward.normalized : Vector3.forward;

        right0 = new Vector3(forward0.z, 0f, -forward0.x); 

        corners = new Vector3[4];
        corners[0] = startPosition;
        corners[1] = startPosition + forward0 * sideLength;         
        corners[2] = corners[1] + right0 * sideLength;         
        corners[3] = corners[2] - forward0 * sideLength;         

        SnapToGroundY(); 
    }

    void Update()
    {
        if (corners == null || corners.Length == 0) return;
        Vector3 target = corners[currentCorner];
        transform.position = Vector3.MoveTowards(transform.position, target, speed * Time.deltaTime);
        if (Vector3.Distance(transform.position, target) <= 0.001f)
        {
            transform.position = target;
            transform.Rotate(0f, 90f, 0f, Space.Self);
            currentCorner = (currentCorner + 1) % 4;
        }
    }

    private void SnapToGroundY()
    {
        float y = startPosition.y;
        for (int i = 0; i < corners.Length; i++)
        {
            corners[i].y = y;
        }
    }
}
